{{- if and .Values.windows.enabled .Values.windows.useHostProcessContainers }}
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: {{ .Values.windows.dsName }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.windows.dsName }}
    {{- include "azurefile.labels" . | nindent 4 }}
{{- with .Values.windows.labels }}
{{ . | toYaml | indent 4 }}
{{- end }}
{{- with .Values.windows.annotations }}
  annotations:
{{ . | toYaml | indent 4 }}
{{- end }}
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.node.maxUnavailable }}
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Values.windows.dsName }}
      {{- include "azurefile.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ .Values.windows.dsName }}
        {{- include "azurefile.labels" . | nindent 8 }}
{{- with .Values.windows.podLabels }}
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.windows.podAnnotations }}
      annotations:
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.node }}
{{- with .Values.windows.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
      nodeSelector:
        kubernetes.io/os: windows
{{- with .Values.windows.nodeSelector }}
{{ toYaml . | indent 8 }}
{{- end }}
      affinity:
{{- with .Values.windows.affinity }}
{{ toYaml . | indent 8 }}
{{- end }}
        nodeAffinity:
{{ toYaml .Values.windows.nodeAffinity | indent 10 }}
      priorityClassName: system-node-critical
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        windowsOptions:
          hostProcess: true
          runAsUserName: "NT AUTHORITY\\SYSTEM"
      hostNetwork: true
      initContainers:
        - name: init
{{- if hasPrefix "/" .Values.image.azurefile.repository }}
          image: "{{ .Values.image.baseRepo }}{{ .Values.image.azurefile.repository }}:{{ .Values.image.azurefile.tag }}-windows-hp"
{{- else }}
          image: "{{ .Values.image.azurefile.repository }}:{{ .Values.image.azurefile.tag }}-windows-hp"
{{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "powershell.exe"
            - "-c"
            - "New-Item -ItemType Directory -Path C:\\var\\lib\\kubelet\\plugins\\{{ .Values.driver.name }}\\ -Force"
          securityContext:
            capabilities:
              drop:
              - ALL
      containers:
        - name: node-driver-registrar
{{- if hasPrefix "/" .Values.image.nodeDriverRegistrar.repository }}
          image: "{{ .Values.image.baseRepo }}{{ .Values.image.nodeDriverRegistrar.repository }}:{{ .Values.image.nodeDriverRegistrar.tag }}"
{{- else }}
          image: "{{ .Values.image.nodeDriverRegistrar.repository }}:{{ .Values.image.nodeDriverRegistrar.tag }}"
{{- end }}
          command:
            - "csi-node-driver-registrar.exe"
          args:
            - "--csi-address=$(CSI_ENDPOINT)"
            - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
            - "--plugin-registration-path=$(PLUGIN_REG_DIR)"
            - "--v=2"
          env:
            - name: CSI_ENDPOINT
              value: unix://{{ .Values.windows.kubelet }}\plugins\{{ .Values.driver.name }}\csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: C:\\var\\lib\\kubelet\\plugins\\{{ .Values.driver.name }}\\csi.sock
            - name: PLUGIN_REG_DIR
              value: C:\\var\\lib\\kubelet\\plugins_registry\\
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          imagePullPolicy: {{ .Values.image.nodeDriverRegistrar.pullPolicy }}
          resources: {{- toYaml .Values.windows.resources.nodeDriverRegistrar | nindent 12 }}
          securityContext:
            capabilities:
              drop:
              - ALL
        - name: azurefile
{{- if hasPrefix "/" .Values.image.azurefile.repository }}
          image: "{{ .Values.image.baseRepo }}{{ .Values.image.azurefile.repository }}:{{ .Values.image.azurefile.tag }}-windows-hp"
{{- else }}
          image: "{{ .Values.image.azurefile.repository }}:{{ .Values.image.azurefile.tag }}-windows-hp"
{{- end }}
          command:
            - "azurefileplugin.exe"
          args:
            - "--v={{ .Values.node.logLevel }}"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(KUBE_NODE_NAME)"
            - "--kubeconfig={{ .Values.windows.kubeconfig }}"
            - "--drivername={{ .Values.driver.name }}"
            - "--cloud-config-secret-name={{ .Values.node.cloudConfigSecretName }}"
            - "--cloud-config-secret-namespace={{ .Values.node.cloudConfigSecretNamespace }}"
            - "--custom-user-agent={{ .Values.driver.customUserAgent }}"
            - "--user-agent-suffix={{ .Values.driver.userAgentSuffix }}"
            - "--allow-empty-cloud-config={{ .Values.node.allowEmptyCloudConfig }}"
            - "--enable-get-volume-stats={{ .Values.feature.enableGetVolumeStats }}"
            - "--enable-windows-host-process=true"
            - "--metrics-address=0.0.0.0:{{ .Values.node.metricsPort }}"
          env:
            - name: AZURE_CREDENTIAL_FILE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.azureCredentialFileConfigMap }}
                  key: path-windows
                  optional: true
            - name: CSI_ENDPOINT
              value: unix://{{ .Values.windows.kubelet }}\plugins\{{ .Values.driver.name }}\csi.sock
            {{- if ne .Values.driver.httpsProxy "" }}
            - name: HTTPS_PROXY
              value: {{ .Values.driver.httpsProxy }}
            {{- end }}
            {{- if ne .Values.driver.httpProxy "" }}
            - name: HTTP_PROXY
              value: {{ .Values.driver.httpProxy }}
            {{- end }}
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources: {{- toYaml .Values.windows.resources.azurefile | nindent 12 }}
          securityContext:
            capabilities:
              drop:
              - ALL
{{- end -}}
