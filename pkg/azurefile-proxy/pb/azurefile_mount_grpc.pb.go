// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// MountServiceClient is the client API for MountService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MountServiceClient interface {
	MountAzureFile(ctx context.Context, in *MountAzureFileRequest, opts ...grpc.CallOption) (*MountAzureFileResponse, error)
}

type mountServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMountServiceClient(cc grpc.ClientConnInterface) MountServiceClient {
	return &mountServiceClient{cc}
}

func (c *mountServiceClient) MountAzureFile(ctx context.Context, in *MountAzureFileRequest, opts ...grpc.CallOption) (*MountAzureFileResponse, error) {
	out := new(MountAzureFileResponse)
	err := c.cc.Invoke(ctx, "/MountService/MountAzureFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MountServiceServer is the server API for MountService service.
// All implementations must embed UnimplementedMountServiceServer
// for forward compatibility
type MountServiceServer interface {
	MountAzureFile(context.Context, *MountAzureFileRequest) (*MountAzureFileResponse, error)
	mustEmbedUnimplementedMountServiceServer()
}

// UnimplementedMountServiceServer must be embedded to have forward compatible implementations.
type UnimplementedMountServiceServer struct {
}

func (UnimplementedMountServiceServer) MountAzureFile(context.Context, *MountAzureFileRequest) (*MountAzureFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MountAzureFile not implemented")
}
func (UnimplementedMountServiceServer) mustEmbedUnimplementedMountServiceServer() {}

// UnsafeMountServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MountServiceServer will
// result in compilation errors.
type UnsafeMountServiceServer interface {
	mustEmbedUnimplementedMountServiceServer()
}

func RegisterMountServiceServer(s grpc.ServiceRegistrar, srv MountServiceServer) {
	s.RegisterService(&MountService_ServiceDesc, srv)
}

func _MountService_MountAzureFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MountAzureFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MountServiceServer).MountAzureFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MountService/MountAzureFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MountServiceServer).MountAzureFile(ctx, req.(*MountAzureFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// MountService_ServiceDesc is the grpc.ServiceDesc for MountService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MountService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "MountService",
	HandlerType: (*MountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MountAzureFile",
			Handler:    _MountService_MountAzureFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/azurefile_mount.proto",
}
